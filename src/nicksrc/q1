static int twtabsize = -1 ;
static double *twxval, *twxpdf, *twxtail ;
static char *twxtable = NULL ;
void gettw(double x,  double *tailp, double *densp)   ;
double twdens(double twstat) 
  gettw(twstat, &dens, &tail) ; 
double twtail(double twstat) 
  gettw(twstat, &tail, &dens) ; 
  printf("zz %9.3f %9.3f\n", twstat, tail) ;
double twdensx(double tw) 
   if (tw<=0.0) return 0.0 ;
    y1 = -0.25*log(tw) ;
    y2 = -2.0*pow(tw, 1.5)/3.0 ;
double twtailx(double tw) 
   if (tw<=0.0) return 1.0 ;
    y1 = -0.75*log(tw) ;
    y2 = -2.0*pow(tw, 1.5)/3.0 ;
void twfree() 
  if (twtabsize<0) return ;
  free(twxval) ;
  free(twxpdf) ;
  free(twxtail) ;
  twtabsize = -1; 
double twnorm(double lam, double p, double n) 
         if (n<p) return twnorm(lam, n, p) ;
// not very important refinement as twnorm symmetric in p, n-1  NJP
dotwcalc(double *lambda, int m, double *ptw, double *pzn, double *pzvar, int minm) 
  double y, top, bot, zn, tw, ystat ;
   *pzn = *pzvar = *ptw = -1 ;
   *pzn = *pzvar = *ptw = -1 ;
   tw = twnorm(ystat, tm, tzn) ;
   *ptw = tw ;  
   tail = twtail(tw) ;
   tw = twnorm(y, tm, zn) ;
   *ptw = tw ;  
   tail = twtail(tw) ;
int settwxtable(char *table) 
    if (twxtable != NULL) return 1 ;
     twxtable = strdup(TWXTABLE) ; 
     twxtable = strdup(table) ; 
    fff = fopen(twxtable, "r") ;
gettw(double x, double *tailp, double *densp)   
// main routine for accessing twtable
  if (twtabsize = -1)  {
    if (settwxtable(TWXTABLE) < 0) 
     fatalx("twtable not readable %s\n", TWXTABLE) ;
    k = numlines(twxtable) ;
    ZALLOC(twxval, k, double) ;
    ZALLOC(twxpdf, k, double) ;
    ZALLOC(twxtail, k, double) ;
    xx[0] = twxval ;
    xx[1] = twxtail ;
    xx[2] = twxpdf ;
    twtabsize = getxx(xx, k, 3, twxtable) ;
  n = twtabsize ;
     k = firstgtx(x, twxval, n) ;    
       *tailp = twdensx(x)  ;
       *densp  = twtailx(x) ;
     x0 = twxval[k-1] ; 
     x1 = twxval[k] ;  
     f0  = twxtail[k-1] ;
     f0p = twxpdf[k-1] ;
     f1 =  twxtail[k] ;
     f1p = twxpdf[k] ;
// cubic interpolation val should be between x0 and x1
